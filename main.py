# –ß—Ç–æ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç?
# –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤,
# –æ –∫—É—Ä—Å–∞—Ö –æ–±–º–µ–Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–∞—Ö –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å.
# –ê–¥—Ä–µ—Å–∞ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π –±–∞–Ω–∫–æ–≤ –∏ –≥—Ä–∞—Ñ–∏–∫ –∏—Ö —Ä–∞–±–æ—Ç—ã.
# –î–µ–ª–∞–µ—Ç –≤—ã–±–æ—Ä–∫—É –±–∞–Ω–∫–æ–≤ —Å –ª—É—á—à–∏–º–∏ –∫—É—Ä—Å–∞–º–∏ –æ–±–º–µ–Ω–∞ (–ø–æ–∫—É–ø–∞—Ç—å –¥–µ—à–µ–≤–ª–µ ‚Äì –ø—Ä–æ–¥–∞–≤–∞—Ç—å –¥–æ—Ä–æ–∂–µ),
# –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è –æ –ø–æ–∫—É–ø–∫–µ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–µ –±–∞–Ω–∫–∞–º–∏ –≤–∞–ª—é—Ç—ã,
# –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ —É –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–æ–≤ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞.
# –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –±–µ–ª–æ—Ä—É—Å—Å–∫–æ–≥–æ —Ä—É–±–ª—è –∫ –∏–∑–±—Ä–∞–Ω–Ω—ã–º –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–º –≤–∞–ª—é—Ç–∞–º
# –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å –≤ —Ä–µ–∂–∏–º–µ —Å–µ–≥–æ–¥–Ω—è/–∑–∞–≤—Ç—Ä–∞.
# –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –ü—Ä–∏–≤–µ—Ç
# –∏–ª–∏ –∂–µ –∫–æ–º–∞–Ω–¥—É: /start
# You will find it at       t.me/ExchangeRates_By_bot
# developer :
# telegram: dubanevich_vk
# twitter:  @d_vladimir


import telebot  # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
from telebot import types
# import datetime
from config import API_TOKEN

bot = telebot.TeleBot(API_TOKEN)

import keyboards as kb
import database as db


# –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–¥–∏–º –Ω—É–∂–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞
if not db.fun_checking_if_table_exists('USERS'):
    db.fun_table_users()  # —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
if not db.fun_checking_if_table_exists('BANK_CITY'):
    db.fun_table_bank_city()  # —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤—Å–µ—Ö –±–∞–Ω–∫–æ–≤ –≥–æ—Ä–æ–¥–æ–≤ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
if not db.fun_checking_if_table_exists('BANK_CITY_USERS'):
    db.fun_table_bank_city_users()  # —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≥–æ—Ä–æ–¥–æ–≤-–±–∞–Ω–∫–æ–≤ –¥–ª—è ID.–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if not db.fun_checking_if_table_exists('EXCHANGE_RATES'):  # –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
    db.fun_table_exchange_rates()

print('start bot')
mesID = []

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start, –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞—à —à–∞–±–ª–æ–Ω
@bot.message_handler(commands=['start'])
def process_start_command(message):
    bot.delete_message(message.chat.id, message.id)  # —É–¥–∞–ª–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –ø—Ä–æ–ø–∏—Å–∫–æ–π user_city = '–ú–æ–ª–æ–¥–µ—á–Ω–æ'
    # –∏ url_user = 'https://myfin.by/currency/molodechno'
    db.fun_reg_user(message.chat.id, message.chat.first_name, message.chat.last_name, message.chat.username,
                    message.chat.type)
    db.fun_set_bank_city_users(
        message.chat.id)  # –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º –±–∞–Ω–∫–∏ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—Ä–µ–º–µ–Ω–Ω–æ –ú–æ–ª–æ–¥–µ—á–Ω–æ, –∞ —Ç–∞–º –∫–∞–∫ –±—É–¥–µ—Ç)
    db.fun_set_courses(message.chat.id)  # —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
    msg = '–ü—Ä–∏–≤–µ—Ç! üëã\n–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–∞—Ö\n–≥. –ú–æ–ª–æ–¥–µ—á–Ω–æ?\n(–í—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç,\n' \
          '–Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É (–ú–æ–ª–æ–¥–µ—á–Ω–æ, –í–∏–ª–µ–π–∫–∞ –∏ —Ç.–ø.) –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.)'
    question_city = ['–î–∞, –ú–æ–ª–æ–¥–µ—á–Ω–æ', '–ù–µ—Ç, –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥']
    global mesID
    mesID.append(bot.send_message(message.chat.id, msg, reply_markup=kb.bottom_keyboard3(question_city)))


# @bot.message_handler(commands=['0'])
# def start_message(message):
#     msg = '–ü—Ä–∏–≤–µ—Ç! üëã\n–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–∞—Ö\n–≥. –ú–æ–ª–æ–¥–µ—á–Ω–æ?\n(–í—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç,\n' \
#           '–Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É (–ú–æ–ª–æ–¥–µ—á–Ω–æ, –í–∏–ª–µ–π–∫–∞ –∏ —Ç.–ø.) –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.)'
#     question_city = ['–î–∞, –ú–æ–ª–æ–¥–µ—á–Ω–æ', '–ù–µ—Ç, –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥']
#     bot.send_message(message.chat.id, msg, reply_markup=kb.bottom_keyboard3(question_city))


@bot.message_handler(content_types=['text'])
def echo(message):
    # cities = db.fun_get_cities()  # –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ –≤ –ë–î
    cities = ['–í–∏–ª–µ–π–∫–∞', '–í–æ–ª–æ–∂–∏–Ω', '–ó–∞—Å–ª–∞–≤–ª—å', '–ú—è–¥–µ–ª—å', '–ù–∞—Ä–æ—á—å', '–†–∞–¥–æ—à–∫–æ–≤–∏—á–∏', '–ú–æ–ª–æ–¥–µ—á–Ω–æ']
    global mesID
    if message.text.capitalize()[:6] == '–ü—Ä–∏–≤–µ—Ç':
        # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –ø—Ä–æ–ø–∏—Å–∫–æ–π user_city = '–ú–æ–ª–æ–¥–µ—á–Ω–æ'
        # –∏ url_user = 'https://myfin.by/currency/molodechno'
        db.fun_reg_user(message.chat.id, message.chat.first_name, message.chat.last_name, message.chat.username,
                        message.chat.type)
        db.fun_set_bank_city_users(
            message.chat.id)  # –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º –±–∞–Ω–∫–∏ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—Ä–µ–º–µ–Ω–Ω–æ –ú–æ–ª–æ–¥–µ—á–Ω–æ, –∞ —Ç–∞–º –∫–∞–∫ –±—É–¥–µ—Ç)
        db.fun_set_courses(message.chat.id)  # —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
        msg = '–ü—Ä–∏–≤–µ—Ç! üëã\n–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–∞—Ö\n–≥. –ú–æ–ª–æ–¥–µ—á–Ω–æ?\n(–í—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç,\n' \
              '–Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É (–ú–æ–ª–æ–¥–µ—á–Ω–æ, –í–∏–ª–µ–π–∫–∞ –∏ —Ç.–ø.) –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.)'
        question_city = ['–î–∞, –ú–æ–ª–æ–¥–µ—á–Ω–æ', '–ù–µ—Ç, –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥']
        global mesID
        mesID.append(bot.send_message(message.chat.id, msg, reply_markup=kb.bottom_keyboard3(question_city)))

    elif message.text == '–î–∞, –ú–æ–ª–æ–¥–µ—á–Ω–æ':

        if len(mesID):
            for mes in mesID:
                bot.delete_message(message.chat.id, mes.id)
            mesID = []

        db.fun_set_user_city_update(message.chat.id, '–ú–æ–ª–æ–¥–µ—á–Ω–æ')  # —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        db.fun_set_bank_city_users(message.chat.id)  # —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã  –±–∞–Ω–∫–æ–≤ –≥–æ—Ä–æ–¥–∞ ID.–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.fun_set_courses(message.chat.id)  # —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
        bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–∞—è\n–õ—É—á—à–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–∞—Ö –≥.–ú–æ–ª–æ–¥–µ—á–Ω–æ',
                         reply_markup=kb.fun_keyboard_TopCourses(db.fun_best_courses(message.chat.id)))

    elif message.text == '–ù–µ—Ç, –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥':  # or message.text == '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥' :

        if len(mesID):
            for mes in mesID:
                bot.delete_message(message.chat.id, mes.id)
            mesID = []

        # –≤—ã–∑—ã–≤–∞–µ–º ReplyKeyboardMarkup –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç:', reply_markup=kb.bottom_keyboard3(cities))

    elif message.text in cities:  # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –æ–¥–∏–Ω –∏–∑ –≥–æ—Ä–æ–¥–æ–≤ –∏–º–µ—é—â–∏—Ö—Å—è –≤ –ë–î
        db.fun_set_user_city_update(message.chat.id, message.text)  # —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        db.fun_set_bank_city_users(message.chat.id)  # —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã  –±–∞–Ω–∫–æ–≤ –≥–æ—Ä–æ–¥–∞ ID.–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db.fun_set_courses(message.chat.id)  # —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
        bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–∞—è\n–õ—É—á—à–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–∞—Ö (' + message.text + ')'
                         , reply_markup=kb.fun_keyboard_TopCourses(db.fun_best_courses(message.chat.id),
                                                                   db.fun_get_city_user(message.chat.id)))

    else:
        bot.send_message(message.chat.id, (message.text + '?      –Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é'))  # —ç—Ö–æ

    bot.delete_message(message.chat.id, message.id)  # —É–¥–∞–ª–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # bot.delete_message(message.chat.id, message.message.id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è - ???


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    # bot.answer_callback_query(callback_query_id=call.id, text='–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä!') # –≤—Å–ø–ª—ã–≤–∞—é—â–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞
    # answer = ''
    currencies = ['USD', 'EUR', '100RUB', 'EUR/USD']

    if call.data == '–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?':
        bot.delete_message(call.message.chat.id,
                           call.message.message_id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ - callback. –í —Ç–æ–º —á–∏—Å–ª–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!!!
        img = open(db.fun_image_file_name(), 'rb')
        bot.send_photo(
            chat_id=call.message.chat.id,
            photo=img,
            caption='')
        advertising = telebot.types.InlineKeyboardMarkup()
        advertising.row(telebot.types.InlineKeyboardButton(text='–û—Ç–∫–ª—é—á–∏—Ç—å', callback_data='–û—Ç–∫–ª—é—á–∏—Ç—å'),
                        telebot.types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å', callback_data='–î–æ–±–∞–≤–∏—Ç—å'))
        # advertising.add(telebot.types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å', callback_data='–î–æ–±–∞–≤–∏—Ç—å'))
        bot.send_message(call.message.chat.id, '–†–µ–∫–ª–∞–º–Ω—ã–π –±–ª–æ–∫ Telegram chat', reply_markup=advertising)
        # -------------------------------------------------------------
        city = db.fun_get_city_user(call.message.chat.id)
        answer = '–ì–ª–∞–≤–Ω–∞—è\n–õ—É—á—à–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–∞—Ö (' + city + ')'
        # bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
        db.fun_set_courses(call.message.chat.id)  # —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
        bot.send_message(call.message.chat.id, answer
                         , reply_markup=kb.fun_keyboard_TopCourses(db.fun_best_courses(call.message.chat.id), city))

    elif call.data == '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥':
        bot.delete_message(call.message.chat.id,
                           call.message.message_id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ - callback!!!
        cities = ['–í–∏–ª–µ–π–∫–∞', '–í–æ–ª–æ–∂–∏–Ω', '–ó–∞—Å–ª–∞–≤–ª—å', '–ú—è–¥–µ–ª—å', '–ù–∞—Ä–æ—á—å', '–†–∞–¥–æ—à–∫–æ–≤–∏—á–∏', '–ú–æ–ª–æ–¥–µ—á–Ω–æ']
        answer = '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç'
        bot.send_message(call.message.chat.id, answer, reply_markup=kb.bottom_keyboard3(cities))

    elif call.data == '–≤—Å–µ –±–∞–Ω–∫–∏':  # –≤—ã–≤–æ–¥ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –≤—Å–µ—Ö –±–∞–Ω–∫–æ–≤ –≥–æ—Ä–æ–¥–∞
        answer = db.fun_form_all_courses(call.message.chat.id)
        bot.delete_message(call.message.chat.id,
                           call.message.message_id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ - callback. –í —Ç–æ–º —á–∏—Å–ª–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!!!
        # bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞

        open_home = telebot.types.InlineKeyboardMarkup()
        open_home.add(telebot.types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é', callback_data='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é'))
        bot.send_message(call.message.chat.id, answer, reply_markup=open_home)

    elif call.data == '–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é':  # –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é —Ñ–æ—Ä–º—É - –ª—É—á—à–∏–µ –∫—É—Ä—Å—ã
        bot.delete_message(call.message.chat.id,
                           call.message.message_id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ - callback. –í —Ç–æ–º —á–∏—Å–ª–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!!!
        city = db.fun_get_city_user(call.message.chat.id)
        answer = '–ì–ª–∞–≤–Ω–∞—è\n–õ—É—á—à–∏–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –≤ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –±–∞–Ω–∫–∞—Ö (' + city + ')'
        # bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
        db.fun_set_courses(call.message.chat.id)  # —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
        bot.send_message(call.message.chat.id, answer
                         , reply_markup=kb.fun_keyboard_TopCourses(db.fun_best_courses(call.message.chat.id), city))

    elif call.data.find('buys') != -1:  # –û—Ç–∫—Ä—ã—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ –±–∞–Ω–∫–µ —Å –ª—É—á—à–∏–º–∏ –∫—É—Ä—Å–∞–º–∏ –ø–æ–∫—É–ø–∫–∏
        bot.delete_message(call.message.chat.id,
                           call.message.message_id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ - callback. –í —Ç–æ–º —á–∏—Å–ª–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!!!

        answer = db.get_top_buys(call.message.chat.id, call.data)
        open_home = telebot.types.InlineKeyboardMarkup()
        open_home.add(telebot.types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é', callback_data='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é'))
        bot.send_message(call.message.chat.id, answer, reply_markup=open_home)

    elif call.data.find('sells') != -1:  # –û—Ç–∫—Ä—ã—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ –±–∞–Ω–∫–µ —Å –ª—É—á—à–∏–º–∏ –∫—É—Ä—Å–∞–º–∏ –ø—Ä–æ–¥–∞–∂–∏
        bot.delete_message(call.message.chat.id,
                           call.message.message_id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ - callback. –í —Ç–æ–º —á–∏—Å–ª–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!!!

        answer = db.get_top_buys(call.message.chat.id, call.data)
        open_home = telebot.types.InlineKeyboardMarkup()
        open_home.add(telebot.types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é', callback_data='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é'))
        bot.send_message(call.message.chat.id, answer, reply_markup=open_home)

    elif call.data in currencies:  # –û—Ç–∫—Ä—ã—Ç—å —Å–≤–µ–¥–µ–Ω–∏—è –æ –≤–∞–ª—é—Ç–µ –ø–æ–∫—É–ø–∞–µ–º–æ–π/ –ø—Ä–æ–¥–æ–≤–∞–µ–º–æ–π –±–∞–Ω–∫–∞–º–∏
        bot.delete_message(call.message.chat.id,
                           call.message.message_id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ - callback. –í —Ç–æ–º —á–∏—Å–ª–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!!!

        answer = db.get_exchange_rates(call.message.chat.id, call.data)
        open_home = telebot.types.InlineKeyboardMarkup()
        open_home.add(telebot.types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é', callback_data='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é'))
        bot.send_message(call.message.chat.id, answer, reply_markup=open_home)

    elif call.data == '–∞–¥—Ä–µ—Å–∞':  # –≤—ã–≤–æ–¥ –∞–¥—Ä–µ—Å–æ–≤ –≤—Å–µ—Ö –±–∞–Ω–∫–æ–≤ –≥–æ—Ä–æ–¥–∞
        answer = db.get_addresses(call.message.chat.id)
        bot.delete_message(call.message.chat.id,
                           call.message.message_id)  # —É–¥–∞–ª–∏–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ - callback. –í —Ç–æ–º —á–∏—Å–ª–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É!!!
        # bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)  # —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞

        open_home = telebot.types.InlineKeyboardMarkup()
        open_home.add(telebot.types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é', callback_data='–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ωy—é'))
        bot.send_message(call.message.chat.id, answer, reply_markup=open_home)


#
# @dp.callback_query_handler(func=lambda c: c.data and c.data.startswith('btn'))
# async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
#     code = callback_query.data[-1]
#     if code.isdigit():
#         code = int(code)
#     if code == 2:
#         await bot.answer_callback_query(callback_query.id, text='–ù–∞–∂–∞—Ç–∞ –≤—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞')
#
#     elif code == 5:
#         await bot.answer_callback_query(
#             callback_query.id,
#             text='–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º 5.\n–ê —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤ üòâ', show_alert=True)
#     else:
#         await bot.answer_callback_query(callback_query.id)
#     await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! code={code}')


if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)